const mui = require('tera-toolbox-mui').DefaultInstance;
const processlist = require("node-processlist")

class ProcessListener {
    constructor(Name, OnAdded, OnRemoved, Interval = 5000) {
        this.listedProcesses = {};
        this.name = Name.toUpperCase();
        this.onAdded = OnAdded;
        this.onRemoved = OnRemoved;
        this.interval = Interval;
        this._timeout = null;
    }

    start() {
        if (this._timeout)
            return;

        this._timeout = setTimeout(() => this.update(), this.interval);
    }

    stop() {
        if (!this._timeout)
            return;

        clearTimeout(this._timeout);
        this._timeout = null;
    }

    update() {
        processlist.getProcesses().then(processes => {
            if (!this._timeout)
                return;

            let NewListedProcesses = {};
            for (let process of processes) {
                if (process.name.toUpperCase() === this.name && !this.listedProcesses[process.pid]) {
                    if (!this.listedProcesses[process.pid]) {
                        console.log(`[toolbox] adding: ${process.name}`);
                        this.onAdded(process);
                        NewListedProcesses[process.pid] = true;
                    } else {
                        NewListedProcesses[process.pid] = true;
                    }
                }
            }

            for (let pid in this.listedProcesses) {
                if (!NewListedProcesses[pid])
                    this.onRemoved(pid);
            }
            this.listedProcesses = NewListedProcesses;
            this._timeout = setTimeout(() => this.update(), this.interval);
        }).catch(e => {
            console.log(mui.get('tera-client-interface/process-listener/scan-error'));
            console.log(JSON.stringify(e));
        });
    }
}

module.exports = ProcessListener;
